// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v4.24.4
// source: api.proto

package proxy_checker_api

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProxyType int32

const (
	ProxyType_PROXY_TYPE_HTTP  ProxyType = 0
	ProxyType_PROXY_TYPE_HTTPS ProxyType = 1
	ProxyType_PROXY_TYPE_SOCK5 ProxyType = 2
)

// Enum value maps for ProxyType.
var (
	ProxyType_name = map[int32]string{
		0: "PROXY_TYPE_HTTP",
		1: "PROXY_TYPE_HTTPS",
		2: "PROXY_TYPE_SOCK5",
	}
	ProxyType_value = map[string]int32{
		"PROXY_TYPE_HTTP":  0,
		"PROXY_TYPE_HTTPS": 1,
		"PROXY_TYPE_SOCK5": 2,
	}
)

func (x ProxyType) Enum() *ProxyType {
	p := new(ProxyType)
	*p = x
	return p
}

func (x ProxyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProxyType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[0].Descriptor()
}

func (ProxyType) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[0]
}

func (x ProxyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProxyType.Descriptor instead.
func (ProxyType) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{0}
}

type ProxyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []string `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty"`
}

func (x *ProxyRequest) Reset() {
	*x = ProxyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProxyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyRequest) ProtoMessage() {}

func (x *ProxyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyRequest.ProtoReflect.Descriptor instead.
func (*ProxyRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{0}
}

func (x *ProxyRequest) GetValue() []string {
	if x != nil {
		return x.Value
	}
	return nil
}

type ProxyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       ProxyType `protobuf:"varint,1,opt,name=type,proto3,enum=proxy_checker_api.ProxyType" json:"type,omitempty"`
	ExternalIp string    `protobuf:"bytes,2,opt,name=externalIp,proto3" json:"externalIp,omitempty"`
	Country    string    `protobuf:"bytes,3,opt,name=country,proto3" json:"country,omitempty"`
	City       string    `protobuf:"bytes,4,opt,name=city,proto3" json:"city,omitempty"`
	Timeout    float64   `protobuf:"fixed64,5,opt,name=timeout,proto3" json:"timeout,omitempty"`
}

func (x *ProxyInfo) Reset() {
	*x = ProxyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProxyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyInfo) ProtoMessage() {}

func (x *ProxyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyInfo.ProtoReflect.Descriptor instead.
func (*ProxyInfo) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1}
}

func (x *ProxyInfo) GetType() ProxyType {
	if x != nil {
		return x.Type
	}
	return ProxyType_PROXY_TYPE_HTTP
}

func (x *ProxyInfo) GetExternalIp() string {
	if x != nil {
		return x.ExternalIp
	}
	return ""
}

func (x *ProxyInfo) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *ProxyInfo) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *ProxyInfo) GetTimeout() float64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

type ProxyCheckResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value  string     `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Active bool       `protobuf:"varint,2,opt,name=active,proto3" json:"active,omitempty"`
	Info   *ProxyInfo `protobuf:"bytes,3,opt,name=info,proto3,oneof" json:"info,omitempty"`
}

func (x *ProxyCheckResult) Reset() {
	*x = ProxyCheckResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProxyCheckResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyCheckResult) ProtoMessage() {}

func (x *ProxyCheckResult) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyCheckResult.ProtoReflect.Descriptor instead.
func (*ProxyCheckResult) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{2}
}

func (x *ProxyCheckResult) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ProxyCheckResult) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *ProxyCheckResult) GetInfo() *ProxyInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type ProxyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total       int32               `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Active      int32               `protobuf:"varint,2,opt,name=active,proto3" json:"active,omitempty"`
	CheckResult []*ProxyCheckResult `protobuf:"bytes,3,rep,name=checkResult,proto3" json:"checkResult,omitempty"`
}

func (x *ProxyResponse) Reset() {
	*x = ProxyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProxyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyResponse) ProtoMessage() {}

func (x *ProxyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyResponse.ProtoReflect.Descriptor instead.
func (*ProxyResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{3}
}

func (x *ProxyResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ProxyResponse) GetActive() int32 {
	if x != nil {
		return x.Active
	}
	return 0
}

func (x *ProxyResponse) GetCheckResult() []*ProxyCheckResult {
	if x != nil {
		return x.CheckResult
	}
	return nil
}

var File_api_proto protoreflect.FileDescriptor

var file_api_proto_rawDesc = []byte{
	0x0a, 0x09, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x22, 0x24,
	0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0xa5, 0x01, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x30, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x49, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x49, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69,
	0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0x80, 0x01, 0x0a,
	0x10, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12,
	0x35, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x22,
	0x84, 0x01, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12,
	0x45, 0x0a, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2a, 0x4c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x52, 0x4f, 0x58, 0x59, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x48, 0x54, 0x54, 0x50, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x52, 0x4f, 0x58,
	0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x48, 0x54, 0x54, 0x50, 0x53, 0x10, 0x01, 0x12, 0x14,
	0x0a, 0x10, 0x50, 0x52, 0x4f, 0x58, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x4f, 0x43,
	0x4b, 0x35, 0x10, 0x02, 0x32, 0xb1, 0x01, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x4a, 0x0a, 0x05, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x1f,
	0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x20, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x55, 0x0a, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65,
	0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x30, 0x01, 0x42, 0x25, 0x5a, 0x11, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x2d, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0xca, 0x02, 0x0f,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x41, 0x70, 0x69, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_proto_rawDescOnce sync.Once
	file_api_proto_rawDescData = file_api_proto_rawDesc
)

func file_api_proto_rawDescGZIP() []byte {
	file_api_proto_rawDescOnce.Do(func() {
		file_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_rawDescData)
	})
	return file_api_proto_rawDescData
}

var file_api_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_api_proto_goTypes = []interface{}{
	(ProxyType)(0),           // 0: proxy_checker_api.ProxyType
	(*ProxyRequest)(nil),     // 1: proxy_checker_api.ProxyRequest
	(*ProxyInfo)(nil),        // 2: proxy_checker_api.ProxyInfo
	(*ProxyCheckResult)(nil), // 3: proxy_checker_api.ProxyCheckResult
	(*ProxyResponse)(nil),    // 4: proxy_checker_api.ProxyResponse
}
var file_api_proto_depIdxs = []int32{
	0, // 0: proxy_checker_api.ProxyInfo.type:type_name -> proxy_checker_api.ProxyType
	2, // 1: proxy_checker_api.ProxyCheckResult.info:type_name -> proxy_checker_api.ProxyInfo
	3, // 2: proxy_checker_api.ProxyResponse.checkResult:type_name -> proxy_checker_api.ProxyCheckResult
	1, // 3: proxy_checker_api.ProxyChecker.check:input_type -> proxy_checker_api.ProxyRequest
	1, // 4: proxy_checker_api.ProxyChecker.checkStream:input_type -> proxy_checker_api.ProxyRequest
	4, // 5: proxy_checker_api.ProxyChecker.check:output_type -> proxy_checker_api.ProxyResponse
	3, // 6: proxy_checker_api.ProxyChecker.checkStream:output_type -> proxy_checker_api.ProxyCheckResult
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_api_proto_init() }
func file_api_proto_init() {
	if File_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProxyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProxyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProxyCheckResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProxyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_goTypes,
		DependencyIndexes: file_api_proto_depIdxs,
		EnumInfos:         file_api_proto_enumTypes,
		MessageInfos:      file_api_proto_msgTypes,
	}.Build()
	File_api_proto = out.File
	file_api_proto_rawDesc = nil
	file_api_proto_goTypes = nil
	file_api_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ProxyCheckerClient is the client API for ProxyChecker service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProxyCheckerClient interface {
	Check(ctx context.Context, in *ProxyRequest, opts ...grpc.CallOption) (*ProxyResponse, error)
	CheckStream(ctx context.Context, in *ProxyRequest, opts ...grpc.CallOption) (ProxyChecker_CheckStreamClient, error)
}

type proxyCheckerClient struct {
	cc grpc.ClientConnInterface
}

func NewProxyCheckerClient(cc grpc.ClientConnInterface) ProxyCheckerClient {
	return &proxyCheckerClient{cc}
}

func (c *proxyCheckerClient) Check(ctx context.Context, in *ProxyRequest, opts ...grpc.CallOption) (*ProxyResponse, error) {
	out := new(ProxyResponse)
	err := c.cc.Invoke(ctx, "/proxy_checker_api.ProxyChecker/check", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proxyCheckerClient) CheckStream(ctx context.Context, in *ProxyRequest, opts ...grpc.CallOption) (ProxyChecker_CheckStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ProxyChecker_serviceDesc.Streams[0], "/proxy_checker_api.ProxyChecker/checkStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &proxyCheckerCheckStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ProxyChecker_CheckStreamClient interface {
	Recv() (*ProxyCheckResult, error)
	grpc.ClientStream
}

type proxyCheckerCheckStreamClient struct {
	grpc.ClientStream
}

func (x *proxyCheckerCheckStreamClient) Recv() (*ProxyCheckResult, error) {
	m := new(ProxyCheckResult)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ProxyCheckerServer is the server API for ProxyChecker service.
type ProxyCheckerServer interface {
	Check(context.Context, *ProxyRequest) (*ProxyResponse, error)
	CheckStream(*ProxyRequest, ProxyChecker_CheckStreamServer) error
}

// UnimplementedProxyCheckerServer can be embedded to have forward compatible implementations.
type UnimplementedProxyCheckerServer struct {
}

func (*UnimplementedProxyCheckerServer) Check(context.Context, *ProxyRequest) (*ProxyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Check not implemented")
}
func (*UnimplementedProxyCheckerServer) CheckStream(*ProxyRequest, ProxyChecker_CheckStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method CheckStream not implemented")
}

func RegisterProxyCheckerServer(s *grpc.Server, srv ProxyCheckerServer) {
	s.RegisterService(&_ProxyChecker_serviceDesc, srv)
}

func _ProxyChecker_Check_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProxyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProxyCheckerServer).Check(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proxy_checker_api.ProxyChecker/Check",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProxyCheckerServer).Check(ctx, req.(*ProxyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProxyChecker_CheckStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ProxyRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ProxyCheckerServer).CheckStream(m, &proxyCheckerCheckStreamServer{stream})
}

type ProxyChecker_CheckStreamServer interface {
	Send(*ProxyCheckResult) error
	grpc.ServerStream
}

type proxyCheckerCheckStreamServer struct {
	grpc.ServerStream
}

func (x *proxyCheckerCheckStreamServer) Send(m *ProxyCheckResult) error {
	return x.ServerStream.SendMsg(m)
}

var _ProxyChecker_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proxy_checker_api.ProxyChecker",
	HandlerType: (*ProxyCheckerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "check",
			Handler:    _ProxyChecker_Check_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "checkStream",
			Handler:       _ProxyChecker_CheckStream_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "api.proto",
}
